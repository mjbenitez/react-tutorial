{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","react_default","a","createElement","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","_this$props","this","Table_TableHeader","Table_TableBody","Component","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","value","setState","defineProperty","submitForm","handleSubmit","state","initialState","_this$state","type","onChange","App","characters","filter","character","i","concat","toConsumableArray","className","src_Table","src_Form","ReactDOM","render","src_App","document","getElementById"],"mappings":"uOAEMA,EAAc,WAClB,OACEC,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,oBAOFC,EAAY,SAAAC,GAGhB,IAAMC,EAAOD,EAAME,cAAcC,IAAI,SAACC,EAAKC,GACzC,OAEET,EAAAC,EAAAC,cAAA,MAAIQ,IAAKD,GACPT,EAAAC,EAAAC,cAAA,UAAKM,EAAIG,MACTX,EAAAC,EAAAC,cAAA,UAAKM,EAAII,KACTZ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQW,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,cAKV,OAAOT,EAAAC,EAAAC,cAAA,aAAQG,IAmBFU,mLAdH,IAAAC,EACmCC,KAAKb,MAAxCE,EADAU,EACAV,cAAeQ,EADfE,EACeF,gBAEvB,OACEd,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAACgB,EAAD,MACAlB,EAAAC,EAAAC,cAACiB,EAAD,CACEb,cAAeA,EACfQ,gBAAiBA,YATPM,oBCuBLC,cAnDb,SAAAA,EAAYjB,GAAO,IAAAkB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAAI,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAV,KAAMb,KAWRwB,aAAe,SAAAC,GAAS,IAAAC,EACAD,EAAME,OAArBpB,EADemB,EACfnB,KAAMqB,EADSF,EACTE,MAEbV,EAAKW,SAALV,OAAAW,EAAA,EAAAX,CAAA,GACGZ,EAAQqB,KAhBMV,EAoBnBa,WAAa,WACXb,EAAKlB,MAAMgC,aAAad,EAAKe,OAC7Bf,EAAKW,SAASX,EAAKgB,eAlBnBhB,EAAKgB,aAAe,CAClB3B,KAAM,GACNC,IAAK,IAGPU,EAAKe,MAAQf,EAAKgB,aATDhB,wEAyBT,IAAAiB,EACctB,KAAKoB,MAAnB1B,EADA4B,EACA5B,KAAMC,EADN2B,EACM3B,IAEd,OACEZ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEsC,KAAK,OACL7B,KAAK,OACLqB,MAAOrB,EACP8B,SAAUxB,KAAKW,eACjB5B,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SACEsC,KAAK,OACL7B,KAAK,MACLqB,MAAOpB,EACP6B,SAAUxB,KAAKW,eACf5B,EAAAC,EAAAC,cAAA,SACEsC,KAAK,SACLR,MAAM,SACNnB,QAASI,KAAKkB,qBA/CPf,aCsCJsB,6MAlCbL,MAAQ,CACNM,WAAY,MAGd7B,gBAAkB,SAAAL,GAAS,IACjBkC,EAAerB,EAAKe,MAApBM,WAERrB,EAAKW,SAAS,CAGZU,WAAYA,EAAWC,OAAO,SAACC,EAAWC,GAExC,OAAOA,IAAMrC,SAKnB2B,aAAe,SAAAS,GACbvB,EAAKW,SAAU,CAACU,WAAU,GAAAI,OAAAxB,OAAAyB,EAAA,EAAAzB,CAAMD,EAAKe,MAAMM,YAAjB,CAA6BE,+EAGhD,IACCF,EAAe1B,KAAKoB,MAApBM,WACR,OACE3C,EAAAC,EAAAC,cAAA,OAAK+C,UAAU,aACbjD,EAAAC,EAAAC,cAACgD,EAAD,CACE5C,cAAeqC,EACf7B,gBAAiBG,KAAKH,kBACtBd,EAAAC,EAAAC,cAACiD,EAAD,CAAMf,aAAcnB,KAAKmB,uBA9BjBhB,mBCElBgC,IAASC,OAAOrD,EAAAC,EAAAC,cAACoD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ec501e2a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst TableHeader = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Job</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\n//simple Component - if the return is contained to one line, doesnt need ()\r\nconst TableBody = props => {\r\n  //props are an effective way to pass existing data to a react component\r\n  //props are readOnly, we have a one way data flow\r\n  const rows = props.characterData.map((row, index) => {\r\n    return (\r\n      //we should always use keys when making lists in react\r\n      <tr key={index}>\r\n        <td>{row.name}</td>\r\n        <td>{row.job}</td>\r\n        <td><button onClick={() => props.removeCharacter(index)}>Delete</button></td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return <tbody>{rows}</tbody>;\r\n}\r\n\r\n//class Component\r\nclass Table extends Component {\r\n  render () {\r\n    const { characterData, removeCharacter } = this.props;\r\n\r\n    return (\r\n      <table>\r\n        <TableHeader />\r\n        <TableBody\r\n          characterData={characterData}\r\n          removeCharacter={removeCharacter} />\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n  //we need the constructor to receive the props of the parent\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //set the initial state to an object with empty properties\r\n    this.initialState = {\r\n      name: '',\r\n      job: ''\r\n    };\r\n    //assign the initialState to the state\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  handleChange = event => {\r\n    const {name, value} = event.target;\r\n\r\n    this.setState({\r\n      [name] : value\r\n    });\r\n  }\r\n\r\n  submitForm = () => {\r\n    this.props.handleSubmit(this.state);\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  render () {\r\n    const { name, job } = this.state;\r\n\r\n    return (\r\n      <form>\r\n        <label>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={this.handleChange} />\r\n        <label>Job</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"job\"\r\n          value={job}\r\n          onChange={this.handleChange} />\r\n          <input\r\n            type=\"button\"\r\n            value=\"Submit\"\r\n            onClick={this.submitForm} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\r\nimport Table from './Table';\r\nimport Form from './Form';\r\n\r\nclass App extends Component {\r\n//state object will contain properties for everything we want to store\r\n  state = {\r\n    characters: []\r\n  };\r\n\r\n  removeCharacter = index => {\r\n    const { characters } = this.state;\r\n    //we have to use this.setState to modify an array\r\n    this.setState({\r\n      //filter the array based on an index that we pass through.\r\n      //Filter does not mutate but creates a new array, is a preferred method\r\n      characters: characters.filter((character, i) => {\r\n        //return the new array\r\n        return i !== index;\r\n      })\r\n    });\r\n  }\r\n\r\n  handleSubmit = character => {\r\n    this.setState ({characters: [...this.state.characters, character]});\r\n  }\r\n\r\n  render() {\r\n    const { characters } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <Table\r\n          characterData={characters}\r\n          removeCharacter={this.removeCharacter} />\r\n          <Form handleSubmit={this.handleSubmit}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","//necesitamos las importaciones de react, react-dom, app e index siempre\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}